-- MySQL Script generated by MySQL Workbench
-- Sun Apr 14 18:48:35 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Player`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Player` (
  `player_id` INT NULL DEFAULT NULL,
  `Name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`player_id`, `Name`));


-- -----------------------------------------------------
-- Table `mydb`.`Game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Game` (
  `game_id` INT NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `Player_player_id` INT NOT NULL,
  `Player_Name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`game_id`),
  INDEX `fk_Game_Player1_idx` (`Player_player_id` ASC, `Player_Name` ASC) VISIBLE,
  CONSTRAINT `fk_Game_Player1`
    FOREIGN KEY (`Player_player_id` , `Player_Name`)
    REFERENCES `mydb`.`Player` (`player_id` , `Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Director` (
  `director_id` INT NOT NULL,
  `Name` VARCHAR(255) NOT NULL,
  `Age` INT NOT NULL,
  `Game_game_id` INT NOT NULL,
  PRIMARY KEY (`director_id`, `Game_game_id`),
  INDEX `fk_Director_Game1_idx` (`Game_game_id` ASC) VISIBLE,
  CONSTRAINT `fk_Director_Game1`
    FOREIGN KEY (`Game_game_id`)
    REFERENCES `mydb`.`Game` (`game_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Nationality`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Nationality` (
  `nationality_id` INT NOT NULL,
  `Director_director_id` INT NOT NULL,
  INDEX (`nationality_id` ASC) VISIBLE,
  PRIMARY KEY (`nationality_id`, `Director_director_id`),
  INDEX `fk_Nationality_Director1_idx` (`Director_director_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`nationality_id`)
    REFERENCES `mydb`.`Nationality` (`nationality_id`),
  CONSTRAINT `fk_Nationality_Director1`
    FOREIGN KEY (`Director_director_id`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Movie` (
  `movie_id` INT NULL DEFAULT NULL,
  `Title` VARCHAR(100) NOT NULL,
  `Release_Year` INT NOT NULL,
  `Production_Company` VARCHAR(45) NOT NULL,
  `Duration` INT NOT NULL,
  `Country_Of_Origin` VARCHAR(100) NOT NULL,
  `Is_domestic` TINYINT NOT NULL,
  `Shares_Scenery` TINYINT NOT NULL,
  `Genre_genre_id` INT NOT NULL,
  `Director_director_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`, `Genre_genre_id`, `Director_director_id`),
  INDEX `fk_Movie_Director1_idx` (`Director_director_id` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_Director1`
    FOREIGN KEY (`Director_director_id`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Country` (
  `country_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `Population` INT NOT NULL,
  PRIMARY KEY (`country_id`));


-- -----------------------------------------------------
-- Table `mydb`.`City`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`City` (
  `city_id` INT NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`city_id`));


-- -----------------------------------------------------
-- Table `mydb`.`Sponsor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Sponsor` (
  `sponsor_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `amount` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`sponsor_id`));


-- -----------------------------------------------------
-- Table `mydb`.`Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Actor` (
  `actor_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `photo_url` VARCHAR(255) NOT NULL,
  `date_of_birth` DATE NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Movie_Genre_genre_id` INT NOT NULL,
  `Movie_Director_director_id` INT NOT NULL,
  `Country_country_id` INT NOT NULL,
  PRIMARY KEY (`actor_id`, `Movie_movie_id`, `Movie_Genre_genre_id`, `Movie_Director_director_id`),
  INDEX `fk_Actor_Movie1_idx` (`Movie_movie_id` ASC, `Movie_Genre_genre_id` ASC, `Movie_Director_director_id` ASC) VISIBLE,
  INDEX `fk_Actor_Country1_idx` (`Country_country_id` ASC) VISIBLE,
  CONSTRAINT `fk_Actor_Movie1`
    FOREIGN KEY (`Movie_movie_id` , `Movie_Genre_genre_id` , `Movie_Director_director_id`)
    REFERENCES `mydb`.`Movie` (`movie_id` , `Genre_genre_id` , `Director_director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actor_Country1`
    FOREIGN KEY (`Country_country_id`)
    REFERENCES `mydb`.`Country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Role` (
  `role_id` INT NOT NULL,
  `Protagonist` VARCHAR(45) NULL,
  `2nd role` VARCHAR(45) NULL,
  `background actor` VARCHAR(45) NULL,
  `Actor_actor_id` INT NOT NULL,
  `Actor_Movie_movie_id` INT NOT NULL,
  `Actor_Movie_Genre_genre_id` INT NOT NULL,
  `Actor_Movie_Director_director_id` INT NOT NULL,
  PRIMARY KEY (`role_id`),
  INDEX `fk_Role_Actor1_idx` (`Actor_actor_id` ASC, `Actor_Movie_movie_id` ASC, `Actor_Movie_Genre_genre_id` ASC, `Actor_Movie_Director_director_id` ASC) VISIBLE,
  CONSTRAINT `fk_Role_Actor1`
    FOREIGN KEY (`Actor_actor_id` , `Actor_Movie_movie_id` , `Actor_Movie_Genre_genre_id` , `Actor_Movie_Director_director_id`)
    REFERENCES `mydb`.`Actor` (`actor_id` , `Movie_movie_id` , `Movie_Genre_genre_id` , `Movie_Director_director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Actor Characteristic Quality`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Actor Characteristic Quality` (
  `idActor Characteristic Quality` INT NOT NULL,
  `rating` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idActor Characteristic Quality`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Physical Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Physical Characteristics` (
  `characteristic_id` INT NULL DEFAULT NULL,
  `Hight` INT NOT NULL,
  `Weight` INT NOT NULL,
  `Atheltic` VARCHAR(45) NOT NULL,
  `Actor_actor_id` INT NOT NULL,
  `Actor Characteristic Quality_idActor Characteristic Quality` INT NOT NULL,
  PRIMARY KEY (`characteristic_id`, `Actor_actor_id`, `Actor Characteristic Quality_idActor Characteristic Quality`),
  INDEX `fk_Physical Characteristics_Actor1_idx` (`Actor_actor_id` ASC) VISIBLE,
  INDEX `fk_Physical Characteristics_Actor Characteristic Quality1_idx` (`Actor Characteristic Quality_idActor Characteristic Quality` ASC) VISIBLE,
  CONSTRAINT `fk_Physical Characteristics_Actor1`
    FOREIGN KEY (`Actor_actor_id`)
    REFERENCES `mydb`.`Actor` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Physical Characteristics_Actor Characteristic Quality1`
    FOREIGN KEY (`Actor Characteristic Quality_idActor Characteristic Quality`)
    REFERENCES `mydb`.`Actor Characteristic Quality` (`idActor Characteristic Quality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Mental Characteristic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Mental Characteristic` (
  `characteristic_id` INT NOT NULL,
  `developed imagination` VARCHAR(45) NULL,
  `emotional delight` VARCHAR(45) NULL,
  `body language` VARCHAR(45) NULL,
  `clarity of speech` VARCHAR(45) NULL,
  `Actor_actor_id` INT NOT NULL,
  `Actor Characteristic Quality_idActor Characteristic Quality` INT NOT NULL,
  PRIMARY KEY (`characteristic_id`, `Actor_actor_id`, `Actor Characteristic Quality_idActor Characteristic Quality`),
  INDEX `fk_Mental Characteristic_Actor1_idx` (`Actor_actor_id` ASC) VISIBLE,
  INDEX `fk_Mental Characteristic_Actor Characteristic Quality1_idx` (`Actor Characteristic Quality_idActor Characteristic Quality` ASC) VISIBLE,
  CONSTRAINT `fk_Mental Characteristic_Actor1`
    FOREIGN KEY (`Actor_actor_id`)
    REFERENCES `mydb`.`Actor` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Mental Characteristic_Actor Characteristic Quality1`
    FOREIGN KEY (`Actor Characteristic Quality_idActor Characteristic Quality`)
    REFERENCES `mydb`.`Actor Characteristic Quality` (`idActor Characteristic Quality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Training Program`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Training Program` (
  `program_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NOT NULL,
  `start date` DATE NOT NULL,
  `end date` DATE NOT NULL,
  `Actor_actor_id` INT NOT NULL,
  PRIMARY KEY (`program_id`),
  INDEX `fk_Training Program_Actor1_idx` (`Actor_actor_id` ASC) VISIBLE,
  CONSTRAINT `fk_Training Program_Actor1`
    FOREIGN KEY (`Actor_actor_id`)
    REFERENCES `mydb`.`Actor` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Technical Characteristic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Technical Characteristic` (
  `characteristic_id` INT NOT NULL,
  `Dilects` VARCHAR(45) NULL,
  `voice` VARCHAR(45) NULL,
  `improvisation` VARCHAR(45) NULL,
  `mimicry` VARCHAR(45) NULL,
  `Actor_actor_id` INT NOT NULL,
  `Training Program_program_id` INT NOT NULL,
  `Actor Characteristic Quality_idActor Characteristic Quality` INT NOT NULL,
  PRIMARY KEY (`characteristic_id`, `Actor_actor_id`, `Actor Characteristic Quality_idActor Characteristic Quality`),
  INDEX `fk_Technical Characteristic_Actor1_idx` (`Actor_actor_id` ASC) VISIBLE,
  INDEX `fk_Technical Characteristic_Training Program1_idx` (`Training Program_program_id` ASC) VISIBLE,
  INDEX `fk_Technical Characteristic_Actor Characteristic Quality1_idx` (`Actor Characteristic Quality_idActor Characteristic Quality` ASC) VISIBLE,
  CONSTRAINT `fk_Technical Characteristic_Actor1`
    FOREIGN KEY (`Actor_actor_id`)
    REFERENCES `mydb`.`Actor` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Technical Characteristic_Training Program1`
    FOREIGN KEY (`Training Program_program_id`)
    REFERENCES `mydb`.`Training Program` (`program_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Technical Characteristic_Actor Characteristic Quality1`
    FOREIGN KEY (`Actor Characteristic Quality_idActor Characteristic Quality`)
    REFERENCES `mydb`.`Actor Characteristic Quality` (`idActor Characteristic Quality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Genre` (
  `genre_id` INT NOT NULL,
  `Genre_movie` VARCHAR(100) NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Movie_Genre_genre_id` INT NOT NULL,
  PRIMARY KEY (`genre_id`, `Movie_movie_id`, `Movie_Genre_genre_id`),
  INDEX `fk_Genre_Movie1_idx` (`Movie_movie_id` ASC, `Movie_Genre_genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_Genre_Movie1`
    FOREIGN KEY (`Movie_movie_id` , `Movie_Genre_genre_id`)
    REFERENCES `mydb`.`Movie` (`movie_id` , `Genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contract` (
  `contract_id` INT NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NOT NULL,
  `annual_salary` INT NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Actor_actor_id` INT NOT NULL,
  PRIMARY KEY (`contract_id`, `Movie_movie_id`, `Actor_actor_id`),
  INDEX `fk_Contract_Movie1_idx` (`Movie_movie_id` ASC) VISIBLE,
  INDEX `fk_Contract_Actor1_idx` (`Actor_actor_id` ASC) VISIBLE,
  CONSTRAINT `fk_Contract_Movie1`
    FOREIGN KEY (`Movie_movie_id`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contract_Actor1`
    FOREIGN KEY (`Actor_actor_id`)
    REFERENCES `mydb`.`Actor` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Competition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Competition` (
  `competition_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `date` DATE NOT NULL,
  `Country_country_id` INT NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Director_director_id` INT NOT NULL,
  PRIMARY KEY (`competition_id`),
  INDEX `fk_Competition_Country1_idx` (`Country_country_id` ASC) VISIBLE,
  INDEX `fk_Competition_Movie1_idx` (`Movie_movie_id` ASC) VISIBLE,
  INDEX `fk_Competition_Director1_idx` (`Director_director_id` ASC) VISIBLE,
  CONSTRAINT `fk_Competition_Country1`
    FOREIGN KEY (`Country_country_id`)
    REFERENCES `mydb`.`Country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Competition_Movie1`
    FOREIGN KEY (`Movie_movie_id`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Competition_Director1`
    FOREIGN KEY (`Director_director_id`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Award`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Award` (
  `award_id` INT NULL DEFAULT NULL,
  `Competition_competition_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`award_id`, `Competition_competition_id`),
  INDEX `fk_Award_Competition1_idx` (`Competition_competition_id` ASC) VISIBLE,
  CONSTRAINT `fk_Award_Competition1`
    FOREIGN KEY (`Competition_competition_id`)
    REFERENCES `mydb`.`Competition` (`competition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Script`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Script` (
  `script_id` INT NOT NULL,
  `Genre` VARCHAR(45) NOT NULL,
  `Duration` INT NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Movie_Genre_genre_id` INT NOT NULL,
  PRIMARY KEY (`script_id`, `Movie_movie_id`, `Movie_Genre_genre_id`),
  INDEX `fk_Script_Movie1_idx` (`Movie_movie_id` ASC, `Movie_Genre_genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_Script_Movie1`
    FOREIGN KEY (`Movie_movie_id` , `Movie_Genre_genre_id`)
    REFERENCES `mydb`.`Movie` (`movie_id` , `Genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`ScriptSegment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ScriptSegment` (
  `segment_id` INT NOT NULL,
  `previous_segment_id` INT NOT NULL,
  `text` TEXT NOT NULL,
  `Script_script_id` INT NOT NULL,
  `Script_Movie_movie_id` INT NOT NULL,
  `Script_Movie_Genre_genre_id` INT NOT NULL,
  PRIMARY KEY (`segment_id`, `Script_script_id`, `Script_Movie_movie_id`, `Script_Movie_Genre_genre_id`),
  INDEX (`previous_segment_id` ASC) VISIBLE,
  INDEX `fk_ScriptSegment_Script1_idx` (`Script_script_id` ASC, `Script_Movie_movie_id` ASC, `Script_Movie_Genre_genre_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`previous_segment_id`)
    REFERENCES `mydb`.`ScriptSegment` (`segment_id`),
  CONSTRAINT `fk_ScriptSegment_Script1`
    FOREIGN KEY (`Script_script_id` , `Script_Movie_movie_id` , `Script_Movie_Genre_genre_id`)
    REFERENCES `mydb`.`Script` (`script_id` , `Movie_movie_id` , `Movie_Genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Social Media Page`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Social Media Page` (
  `page_id` INT NOT NULL,
  `platform` VARCHAR(255) NOT NULL,
  `Competition_competition_id` INT NOT NULL,
  `Director_director_id1` INT NOT NULL,
  PRIMARY KEY (`page_id`),
  INDEX `fk_SocialMediaPage_Competition1_idx` (`Competition_competition_id` ASC) VISIBLE,
  INDEX `fk_Social Media Page_Director1_idx` (`Director_director_id1` ASC) VISIBLE,
  CONSTRAINT `fk_SocialMediaPage_Competition1`
    FOREIGN KEY (`Competition_competition_id`)
    REFERENCES `mydb`.`Competition` (`competition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Social Media Page_Director1`
    FOREIGN KEY (`Director_director_id1`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Friendship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Friendship` (
  `idFriendship` INT NOT NULL,
  `user1` VARCHAR(45) NOT NULL,
  `user2` VARCHAR(45) NOT NULL,
  `Social Media Page_page_id` INT NOT NULL,
  PRIMARY KEY (`idFriendship`),
  INDEX `fk_Friendship_Social Media Page1_idx` (`Social Media Page_page_id` ASC) VISIBLE,
  CONSTRAINT `fk_Friendship_Social Media Page1`
    FOREIGN KEY (`Social Media Page_page_id`)
    REFERENCES `mydb`.`Social Media Page` (`page_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Characteristic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Characteristic` (
  `characteristic_id` INT NULL DEFAULT NULL,
  `Name` VARCHAR(255) NOT NULL,
  `Player_player_id` INT NOT NULL,
  `Player_Name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`characteristic_id`, `Player_player_id`, `Player_Name`),
  INDEX `fk_Characteristic_Player1_idx` (`Player_player_id` ASC, `Player_Name` ASC) VISIBLE,
  CONSTRAINT `fk_Characteristic_Player1`
    FOREIGN KEY (`Player_player_id` , `Player_Name`)
    REFERENCES `mydb`.`Player` (`player_id` , `Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Look Up to`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Look Up to` (
  `idLook Up to` INT NOT NULL,
  `Actor` VARCHAR(45) NULL,
  `Movies` VARCHAR(45) NULL,
  `Director_director_id` INT NOT NULL,
  PRIMARY KEY (`idLook Up to`),
  INDEX `fk_Look Up to_Director1_idx` (`Director_director_id` ASC) VISIBLE,
  CONSTRAINT `fk_Look Up to_Director1`
    FOREIGN KEY (`Director_director_id`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`DomesticScenery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`DomesticScenery` (
  `idDomesticScenery` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Movie_Genre_genre_id` INT NOT NULL,
  `City_city_id` INT NOT NULL,
  PRIMARY KEY (`idDomesticScenery`, `Movie_movie_id`, `Movie_Genre_genre_id`),
  INDEX `fk_DomesticScenery_Movie1_idx` (`Movie_movie_id` ASC, `Movie_Genre_genre_id` ASC) VISIBLE,
  INDEX `fk_DomesticScenery_City1_idx` (`City_city_id` ASC) VISIBLE,
  CONSTRAINT `fk_DomesticScenery_Movie1`
    FOREIGN KEY (`Movie_movie_id` , `Movie_Genre_genre_id`)
    REFERENCES `mydb`.`Movie` (`movie_id` , `Genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DomesticScenery_City1`
    FOREIGN KEY (`City_city_id`)
    REFERENCES `mydb`.`City` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`InternationalScenery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`InternationalScenery` (
  `idInternationalScenery` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Movie_Genre_genre_id` INT NOT NULL,
  PRIMARY KEY (`idInternationalScenery`, `Movie_movie_id`, `Movie_Genre_genre_id`),
  INDEX `fk_InternationalScenery_Movie1_idx` (`Movie_movie_id` ASC, `Movie_Genre_genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_InternationalScenery_Movie1`
    FOREIGN KEY (`Movie_movie_id` , `Movie_Genre_genre_id`)
    REFERENCES `mydb`.`Movie` (`movie_id` , `Genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Sponsor_has_Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Sponsor_has_Movie` (
  `Movie_movie_id` INT NOT NULL,
  `Sponsor_sponsor_id` INT NOT NULL,
  `Movie_Genre_genre_id` INT NOT NULL,
  PRIMARY KEY (`Movie_movie_id`, `Sponsor_sponsor_id`, `Movie_Genre_genre_id`),
  INDEX `fk_Sponsor_has_Movie_Movie1_idx` (`Movie_movie_id` ASC, `Movie_Genre_genre_id` ASC) VISIBLE,
  INDEX `fk_Sponsor_has_Movie_Sponsor1_idx` (`Sponsor_sponsor_id` ASC) VISIBLE,
  CONSTRAINT `fk_Sponsor_has_Movie_Sponsor1`
    FOREIGN KEY (`Sponsor_sponsor_id`)
    REFERENCES `mydb`.`Sponsor` (`sponsor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Sponsor_has_Movie_Movie1`
    FOREIGN KEY (`Movie_movie_id` , `Movie_Genre_genre_id`)
    REFERENCES `mydb`.`Movie` (`movie_id` , `Genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`InternationalScenery_has_Country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`InternationalScenery_has_Country` (
  `InternationalScenery_idInternationalScenery` INT NOT NULL,
  `InternationalScenery_Movie_movie_id` INT NOT NULL,
  `InternationalScenery_Movie_Genre_genre_id` INT NOT NULL,
  `Country_country_id` INT NOT NULL,
  PRIMARY KEY (`InternationalScenery_idInternationalScenery`, `InternationalScenery_Movie_movie_id`, `InternationalScenery_Movie_Genre_genre_id`, `Country_country_id`),
  INDEX `fk_InternationalScenery_has_Country_Country1_idx` (`Country_country_id` ASC) VISIBLE,
  INDEX `fk_InternationalScenery_has_Country_InternationalScenery1_idx` (`InternationalScenery_idInternationalScenery` ASC, `InternationalScenery_Movie_movie_id` ASC, `InternationalScenery_Movie_Genre_genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_InternationalScenery_has_Country_InternationalScenery1`
    FOREIGN KEY (`InternationalScenery_idInternationalScenery` , `InternationalScenery_Movie_movie_id` , `InternationalScenery_Movie_Genre_genre_id`)
    REFERENCES `mydb`.`InternationalScenery` (`idInternationalScenery` , `Movie_movie_id` , `Movie_Genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_InternationalScenery_has_Country_Country1`
    FOREIGN KEY (`Country_country_id`)
    REFERENCES `mydb`.`Country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Competition Stats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Competition Stats` (
  `idCompetition Stats` INT NOT NULL,
  `nominations` VARCHAR(45) NOT NULL,
  `wins` INT NOT NULL,
  `Competition_competition_id` INT NOT NULL,
  `Movie_movie_id` INT NOT NULL,
  `Movie_Genre_genre_id` INT NOT NULL,
  `Movie_Director_director_id` INT NOT NULL,
  PRIMARY KEY (`idCompetition Stats`, `Competition_competition_id`),
  INDEX `fk_Competition Stats_Competition1_idx` (`Competition_competition_id` ASC) VISIBLE,
  INDEX `fk_Competition Stats_Movie1_idx` (`Movie_movie_id` ASC, `Movie_Genre_genre_id` ASC, `Movie_Director_director_id` ASC) VISIBLE,
  CONSTRAINT `fk_Competition Stats_Competition1`
    FOREIGN KEY (`Competition_competition_id`)
    REFERENCES `mydb`.`Competition` (`competition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Competition Stats_Movie1`
    FOREIGN KEY (`Movie_movie_id` , `Movie_Genre_genre_id` , `Movie_Director_director_id`)
    REFERENCES `mydb`.`Movie` (`movie_id` , `Genre_genre_id` , `Director_director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Director Like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Director Like` (
  `idDirector Like` INT NOT NULL,
  `SocialMediaPage_page_id` INT NOT NULL,
  `likes` INT NOT NULL,
  `Director_director_id` INT NOT NULL,
  PRIMARY KEY (`idDirector Like`, `SocialMediaPage_page_id`),
  INDEX `fk_Director Like_SocialMediaPage1_idx` (`SocialMediaPage_page_id` ASC) VISIBLE,
  INDEX `fk_Director Like_Director1_idx` (`Director_director_id` ASC) VISIBLE,
  CONSTRAINT `fk_Director Like_SocialMediaPage1`
    FOREIGN KEY (`SocialMediaPage_page_id`)
    REFERENCES `mydb`.`Social Media Page` (`page_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Director Like_Director1`
    FOREIGN KEY (`Director_director_id`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
